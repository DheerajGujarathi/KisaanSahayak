{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`Making ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} request to ${config.url}`);\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('Response error:', error);\n  if (error.code === 'ECONNABORTED') {\n    throw new Error('Request timeout. Please try again.');\n  }\n  if (!error.response) {\n    throw new Error('Network error. Please check your connection.');\n  }\n  const {\n    status,\n    data\n  } = error.response;\n  switch (status) {\n    case 400:\n      throw new Error(data.error || 'Invalid request');\n    case 429:\n      throw new Error('Too many requests. Please wait a moment and try again.');\n    case 500:\n      throw new Error('Server error. Please try again later.');\n    case 503:\n      throw new Error('Service temporarily unavailable. Please ensure the AI service is running.');\n    default:\n      throw new Error(data.error || 'An unexpected error occurred');\n  }\n});\nexport const chatService = {\n  // Send a chat message\n  async sendMessage(message, sessionId = 'default') {\n    try {\n      const response = await api.post('/chat', {\n        message,\n        sessionId\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Chat service error:', error);\n      throw error;\n    }\n  },\n  // Get chat history\n  async getChatHistory(sessionId = 'default') {\n    try {\n      const response = await api.get(`/chat/history/${sessionId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Chat history error:', error);\n      throw error;\n    }\n  },\n  // Get farming tips\n  async getFarmingTips() {\n    try {\n      const response = await api.get('/tips');\n      return response.data;\n    } catch (error) {\n      console.error('Tips service error:', error);\n      throw error;\n    }\n  },\n  // Health check\n  async checkHealth() {\n    try {\n      const response = await api.get('/health');\n      return response.data.status === 'healthy';\n    } catch (error) {\n      console.error('Health check error:', error);\n      return false;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","code","Error","status","data","chatService","sendMessage","message","sessionId","post","getChatHistory","get","getFarmingTips","checkHealth"],"sources":["D:/RAG-Farmers/web-app/frontend/src/services/chatService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`Making ${config.method?.toUpperCase()} request to ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error);\r\n    \r\n    if (error.code === 'ECONNABORTED') {\r\n      throw new Error('Request timeout. Please try again.');\r\n    }\r\n    \r\n    if (!error.response) {\r\n      throw new Error('Network error. Please check your connection.');\r\n    }\r\n    \r\n    const { status, data } = error.response;\r\n    \r\n    switch (status) {\r\n      case 400:\r\n        throw new Error(data.error || 'Invalid request');\r\n      case 429:\r\n        throw new Error('Too many requests. Please wait a moment and try again.');\r\n      case 500:\r\n        throw new Error('Server error. Please try again later.');\r\n      case 503:\r\n        throw new Error('Service temporarily unavailable. Please ensure the AI service is running.');\r\n      default:\r\n        throw new Error(data.error || 'An unexpected error occurred');\r\n    }\r\n  }\r\n);\r\n\r\nexport const chatService = {\r\n  // Send a chat message\r\n  async sendMessage(message, sessionId = 'default') {\r\n    try {\r\n      const response = await api.post('/chat', {\r\n        message,\r\n        sessionId,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Chat service error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get chat history\r\n  async getChatHistory(sessionId = 'default') {\r\n    try {\r\n      const response = await api.get(`/chat/history/${sessionId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Chat history error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Get farming tips\r\n  async getFarmingTips() {\r\n    try {\r\n      const response = await api.get('/tips');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Tips service error:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Health check\r\n  async checkHealth() {\r\n    try {\r\n      const response = await api.get('/health');\r\n      return response.data.status === 'healthy';\r\n    } catch (error) {\r\n      console.error('Health check error:', error);\r\n      return false;\r\n    }\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}