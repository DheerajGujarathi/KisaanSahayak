{"ast":null,"code":"var _jsxFileName = \"D:\\\\RAG-Farmers\\\\web-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport ChatInterface from './components/ChatInterface';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport { theme } from './styles/theme';\nimport { chatService } from './services/chatService';\nimport { chatHistoryService } from './services/chatHistoryService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  height: 100vh;\n  background: ${props => props.theme.colors.background};\n  font-family: ${props => props.theme.fonts.primary};\n  position: relative;\n  \n  /* Add decorative elements */\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 4px;\n    background: ${props => props.theme.colors.primaryGradient};\n    z-index: 100;\n  }\n`;\n_c = AppContainer;\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\n_c2 = MainContent;\nconst ContentArea = styled.div`\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n`;\n_c3 = ContentArea;\nfunction App() {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [currentSessionId, setCurrentSessionId] = useState(null);\n  useEffect(() => {\n    // Check backend connection on app start\n    const checkConnection = async () => {\n      try {\n        const status = await chatService.checkHealth();\n        setConnectionStatus(status ? 'connected' : 'disconnected');\n      } catch (error) {\n        console.error('Failed to connect to backend:', error);\n        setConnectionStatus('disconnected');\n      }\n    };\n    checkConnection();\n\n    // Check connection every 30 seconds\n    const interval = setInterval(checkConnection, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const handleSessionSelect = session => {\n    setChatMessages(session.messages);\n    setCurrentSessionId(session.id);\n  };\n  const handleClearHistory = () => {\n    setChatMessages([]);\n    setCurrentSessionId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        onSessionSelect: handleSessionSelect,\n        onClearHistory: handleClearHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          connectionStatus: connectionStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentArea, {\n          children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n            initialMessages: chatMessages,\n            sessionId: currentSessionId,\n            onMessagesChange: setChatMessages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HYAfYDp3u6L6Oj9l3UVSyBSssB0=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"ContentArea\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","ThemeProvider","ChatInterface","Header","Sidebar","theme","chatService","chatHistoryService","jsxDEV","_jsxDEV","AppContainer","div","props","colors","background","fonts","primary","primaryGradient","_c","MainContent","_c2","ContentArea","_c3","App","_s","isSidebarOpen","setIsSidebarOpen","connectionStatus","setConnectionStatus","chatMessages","setChatMessages","currentSessionId","setCurrentSessionId","checkConnection","status","checkHealth","error","console","interval","setInterval","clearInterval","toggleSidebar","handleSessionSelect","session","messages","id","handleClearHistory","children","onSessionSelect","onClearHistory","fileName","_jsxFileName","lineNumber","columnNumber","initialMessages","sessionId","onMessagesChange","_c4","$RefreshReg$"],"sources":["D:/RAG-Farmers/web-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport Header from './components/Header';\r\nimport Sidebar from './components/Sidebar';\r\nimport { theme } from './styles/theme';\r\nimport { chatService } from './services/chatService';\r\nimport { chatHistoryService } from './services/chatHistoryService';\r\n\r\nconst AppContainer = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  background: ${props => props.theme.colors.background};\r\n  font-family: ${props => props.theme.fonts.primary};\r\n  position: relative;\r\n  \r\n  /* Add decorative elements */\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 4px;\r\n    background: ${props => props.theme.colors.primaryGradient};\r\n    z-index: 100;\r\n  }\r\n`;\r\n\r\nconst MainContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ContentArea = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nfunction App() {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [currentSessionId, setCurrentSessionId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check backend connection on app start\r\n    const checkConnection = async () => {\r\n      try {\r\n        const status = await chatService.checkHealth();\r\n        setConnectionStatus(status ? 'connected' : 'disconnected');\r\n      } catch (error) {\r\n        console.error('Failed to connect to backend:', error);\r\n        setConnectionStatus('disconnected');\r\n      }\r\n    };\r\n\r\n    checkConnection();\r\n    \r\n    // Check connection every 30 seconds\r\n    const interval = setInterval(checkConnection, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n\r\n  const handleSessionSelect = (session) => {\r\n    setChatMessages(session.messages);\r\n    setCurrentSessionId(session.id);\r\n  };\r\n\r\n  const handleClearHistory = () => {\r\n    setChatMessages([]);\r\n    setCurrentSessionId(null);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <AppContainer>\r\n        <Sidebar \r\n          onSessionSelect={handleSessionSelect}\r\n          onClearHistory={handleClearHistory}\r\n        />\r\n        <MainContent>\r\n          <Header \r\n            connectionStatus={connectionStatus}\r\n          />\r\n          <ContentArea>\r\n            <ChatInterface \r\n              initialMessages={chatMessages}\r\n              sessionId={currentSessionId}\r\n              onMessagesChange={setChatMessages}\r\n            />\r\n          </ContentArea>\r\n        </MainContent>\r\n      </AppContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,IAAIC,aAAa,QAAQ,mBAAmB;AACzD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,kBAAkB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,YAAY,GAAGV,MAAM,CAACW,GAAG;AAC/B;AACA;AACA,gBAAgBC,KAAK,IAAIA,KAAK,CAACP,KAAK,CAACQ,MAAM,CAACC,UAAU;AACtD,iBAAiBF,KAAK,IAAIA,KAAK,CAACP,KAAK,CAACU,KAAK,CAACC,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBJ,KAAK,IAAIA,KAAK,CAACP,KAAK,CAACQ,MAAM,CAACI,eAAe;AAC7D;AACA;AACA,CAAC;AAACC,EAAA,GAlBIR,YAAY;AAoBlB,MAAMS,WAAW,GAAGnB,MAAM,CAACW,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GALID,WAAW;AAOjB,MAAME,WAAW,GAAGrB,MAAM,CAACW,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAJID,WAAW;AAMjB,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,YAAY,CAAC;EACtE,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd;IACA,MAAMkC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAM5B,WAAW,CAAC6B,WAAW,CAAC,CAAC;QAC9CP,mBAAmB,CAACM,MAAM,GAAG,WAAW,GAAG,cAAc,CAAC;MAC5D,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDR,mBAAmB,CAAC,cAAc,CAAC;MACrC;IACF,CAAC;IAEDK,eAAe,CAAC,CAAC;;IAEjB;IACA,MAAMK,QAAQ,GAAGC,WAAW,CAACN,eAAe,EAAE,KAAK,CAAC;IACpD,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1Bf,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAClC,CAAC;EAED,MAAMiB,mBAAmB,GAAIC,OAAO,IAAK;IACvCb,eAAe,CAACa,OAAO,CAACC,QAAQ,CAAC;IACjCZ,mBAAmB,CAACW,OAAO,CAACE,EAAE,CAAC;EACjC,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BhB,eAAe,CAAC,EAAE,CAAC;IACnBE,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,oBACEvB,OAAA,CAACR,aAAa;IAACI,KAAK,EAAEA,KAAM;IAAA0C,QAAA,eAC1BtC,OAAA,CAACC,YAAY;MAAAqC,QAAA,gBACXtC,OAAA,CAACL,OAAO;QACN4C,eAAe,EAAEN,mBAAoB;QACrCO,cAAc,EAAEH;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACF5C,OAAA,CAACU,WAAW;QAAA4B,QAAA,gBACVtC,OAAA,CAACN,MAAM;UACLwB,gBAAgB,EAAEA;QAAiB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACF5C,OAAA,CAACY,WAAW;UAAA0B,QAAA,eACVtC,OAAA,CAACP,aAAa;YACZoD,eAAe,EAAEzB,YAAa;YAC9B0B,SAAS,EAAExB,gBAAiB;YAC5ByB,gBAAgB,EAAE1B;UAAgB;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB;AAAC7B,EAAA,CA7DQD,GAAG;AAAAkC,GAAA,GAAHlC,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAAL,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAAxC,EAAA;AAAAwC,YAAA,CAAAtC,GAAA;AAAAsC,YAAA,CAAApC,GAAA;AAAAoC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}